name: 'publish'

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Linux build dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build frontend with Vite
        run: pnpm run build

      - name: Zip frontend static files
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          cd dist
          zip -r ../gh-analyzer-frontend.zip .

      - name: Tauri Build Only (Skip DMG Creation)
        run: pnpm tauri build ${{ matrix.args }}

      - name: Remove quarantine and manually create DMG (macOS only)
        if: startsWith(matrix.platform, 'macos')
        run: |
          npm install -g create-dmg

          TARGET_ARCH="${{ matrix.args == '--target aarch64-apple-darwin' && 'aarch64' || 'x86_64' }}"
          APP_NAME="GH Analyzer.app"
          APP_DIR="src-tauri/target/${TARGET_ARCH}-apple-darwin/release/bundle/macos"
          APP_PATH="$APP_DIR/$APP_NAME"
          DMG_NAME="gh-analyzer-${TARGET_ARCH}.dmg"

          echo "Removing quarantine flags..."
          xattr -cr "$APP_PATH"

          echo "Creating DMG..."
          create-dmg "$APP_PATH" \
            --overwrite \
            --dmg-title="GH Analyzer" \
            --volname="GH Analyzer Installer" \
            --out="$APP_DIR"

          mv "$APP_DIR/GH Analyzer*.dmg" "$APP_DIR/$DMG_NAME"

      - name: Create GitHub Release (if not exists)
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'GH Analyzer v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Upload frontend zip to GitHub Release
        if: matrix.platform == 'ubuntu-22.04'
        uses: softprops/action-gh-release@v2
        with:
          files: gh-analyzer-frontend.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload custom DMG to GitHub Release
        if: startsWith(matrix.platform, 'macos')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            src-tauri/target/*-apple-darwin/release/bundle/macos/gh-analyzer-*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}